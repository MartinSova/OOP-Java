#BlueJ class context
comment0.params=num\ manufacturer\ name\ id\ year\ month
comment0.target=void\ addBeanBags(int,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ short,\ byte)
comment0.text=\n\ Method\ adds\ bean\ bags\ to\ the\ store\ with\ the\ arguments\ as\ bean\ bag\ details.\n\ <p>\n\ The\ state\ of\ this\ BeanBagStore\ must\ be\ be\ unchanged\ if\ any\ exceptions\ are\ \n\ thrown.\n\n\ @param\ num\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ number\ of\ bean\ bags\ added\n\ @param\ manufacturer\ \ \ \ \ \ bean\ bag\ manufacturer\n\ @param\ name\ \ \ \ \ \ \ \ \ \ \ \ \ \ bean\ bag\ name\n\ @param\ id\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ID\ of\ bean\ bag\ \n\ @param\ year\ \ \ \ \ \ \ \ \ \ \ \ \ \ year\ of\ manufacture\n\ @param\ month\ \ \ \ \ \ \ \ \ \ \ \ \ month\ of\ manufacture\n\ @throws\ IllegalNumberOfBeanBagsAddedException\ \ \ if\ the\ number\ to\ be\ added\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ is\ less\ than\ 1\n\ @throws\ BeanBagMismatchException\ if\ the\ id\ already\ exists\ in\ the\ store,\ but\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ other\ strored\ elements\ (manufacturer,\ name\ and\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ free\ text)\ do\ not\ match\n\ @throws\ IllegalIDException\ \ \ if\ the\ ID\ is\ not\ a\ positive\ eight\ character\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ hexadecimal\ number\n\ @throws\ InvalidMonthException\ \ \ \ if\ the\ month\ is\ not\ in\ the\ range\ 1\ to\ 12\n
comment1.params=num\ manufacturer\ name\ id\ year\ month\ information
comment1.target=void\ addBeanBags(int,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ short,\ byte,\ java.lang.String)
comment1.text=\n\ Method\ adds\ bean\ bags\ to\ the\ store\ with\ the\ arguments\ as\ bean\ bag\ details.\n\ <p>\n\ The\ state\ of\ this\ BeanBagStore\ must\ be\ be\ unchanged\ if\ any\ exceptions\ are\n\ thrown.\n\n\ @param\ num\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ number\ of\ bean\ bags\ added\n\ @param\ manufacturer\ \ \ \ \ \ bean\ bag\ manufacturer\n\ @param\ name\ \ \ \ \ \ \ \ \ \ \ \ \ \ bean\ bag\ name\n\ @param\ id\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ID\ of\ bean\ bag\n\ @param\ year\ \ \ \ \ \ \ \ \ \ \ \ \ \ year\ of\ manufacture\n\ @param\ month\ \ \ \ \ \ \ \ \ \ \ \ \ month\ of\ manufacture\n\ @param\ information\ \ \ \ \ \ \ free\ text\ detailing\ bean\ bag\ information\n\ @throws\ IllegalNumberOfBeanBagsAddedException\ \ \ if\ the\ number\ to\ be\ added\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ is\ less\ than\ 1\n\ @throws\ BeanBagMismatchException\ if\ the\ id\ already\ exists\ in\ the\ store,\ but\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ other\ stored\ elements\ (manufacturer,\ name\ and\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ free\ text)\ do\ not\ match\n\ @throws\ IllegalIDException\ \ \ if\ the\ ID\ is\ not\ a\ positive\ eight\ character\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ hexadecimal\ number\n\ @throws\ InvalidMonthException\ \ \ \ if\ the\ month\ is\ not\ in\ the\ range\ 1\ to\ 12\n
comment10.params=filename
comment10.target=void\ saveStoreContents(java.lang.String)
comment10.text=\n\ Method\ saves\ this\ BeanBagStore's\ contents\ into\ a\ serialised\ file,\n\ with\ the\ filename\ given\ in\ the\ argument.\n\n\ @param\ filename\ \ \ \ \ \ location\ of\ the\ file\ to\ be\ saved\n\ @throws\ IOException\ \ if\ there\ is\ a\ problem\ experienced\ when\ trying\ to\ save\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ store\ contents\ to\ the\ file\n
comment11.params=filename
comment11.target=void\ loadStoreContents(java.lang.String)
comment11.text=\n\ Method\ should\ load\ and\ replace\ this\ BeanBagStore's\ contents\ with\ the\n\ serialised\ contents\ stored\ in\ the\ file\ given\ in\ the\ argument.\n\ <p>\n\ The\ state\ of\ this\ BeanBagStore\ must\ be\ be\ unchanged\ if\ any\ exceptions\ are\n\ thrown.\n\n\ @param\ filename\ \ \ \ \ \ location\ of\ the\ file\ to\ be\ loaded\n\ @throws\ IOException\ \ if\ there\ is\ a\ problem\ experienced\ when\ trying\ to\ load\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ store\ contents\ from\ the\ file\n\ @throws\ ClassNotFoundException\ \ \ if\ required\ class\ files\ cannot\ be\ found\ when\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ loading\n
comment12.params=
comment12.target=int\ getNumberOfDifferentBeanBagsInStock()
comment12.text=\n\ Access\ method\ for\ the\ number\ of\ different\ bean\ bags\ currently\ stocked\ by\ this\n\ BeanBagStore.\n\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ number\ of\ different\ specific\ bean\ bags\ currently\ in\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ this\ store\ (i.e.\ how\ many\ different\ IDs\ represented\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ by\ bean\ bags\ currently\ in\ stock,\ including\ reserved)\n
comment13.params=
comment13.target=int\ getNumberOfSoldBeanBags()
comment13.text=\n\ Method\ to\ return\ number\ of\ bean\ bags\ sold\ by\ this\ BeanBagStore.\n\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ number\ of\ bean\ bags\ sold\ by\ the\ store\n
comment14.params=id
comment14.target=int\ getNumberOfSoldBeanBags(java.lang.String)
comment14.text=\n\ Method\ to\ return\ number\ of\ bean\ bags\ sold\ by\ this\ BeanBagStore\ with\n\ matching\ ID.\n\ <p>\n\ The\ state\ of\ this\ BeanBagStore\ must\ be\ be\ unchanged\ if\ any\ exceptions\ are\n\ thrown.\n\n\ @param\ id\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ID\ of\ bean\ bags\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ number\ bean\ bags\ sold\ by\ the\ store\ with\ matching\ ID\n\ @throws\ BeanBagIDNotRecognisedException\ \ if\ the\ ID\ does\ not\ match\ any\ bag\ in\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (or\ previously\ in)\ stock\n\ @throws\ IllegalIDException\ \ \ if\ the\ ID\ is\ not\ a\ positive\ eight\ character\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ hexadecimal\ number\n
comment15.params=
comment15.target=int\ getTotalPriceOfSoldBeanBags()
comment15.text=\n\ Method\ to\ return\ total\ price\ of\ bean\ bags\ sold\ by\ this\ BeanBagStore\n\ (in\ pence),\ i.e.\ income\ that\ has\ been\ generated\ by\ these\ sales).\n\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ total\ cost\ of\ bean\ bags\ sold\ (in\ pence)\n
comment16.params=id
comment16.target=int\ getTotalPriceOfSoldBeabBags(java.lang.String)
comment16.text=\n\ Method\ to\ return\ total\ price\ of\ bean\ bags\ sold\ by\ this\ BeanBagStore\n\ (in\ pence)\ with\ \ matching\ ID\ (i.e.\ income\ that\ has\ been\ generated\ \n\ by\ these\ sales).\n\ <p>\n\ The\ state\ of\ this\ BeanBagStore\ must\ be\ be\ unchanged\ if\ any\ exceptions\ are\n\ thrown.\n\n\ @param\ id\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ID\ of\ bean\ bags\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ total\ cost\ of\ bean\ bags\ sold\ (in\ pence)\ with\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ matching\ ID\n\ @throws\ BeanBagIDNotRecognisedException\ \ if\ the\ ID\ does\ not\ match\ any\ bag\ in\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (or\ previously\ in)\ stock\n\ @throws\ IllegalIDException\ \ \ if\ the\ ID\ is\ not\ a\ positive\ eight\ character\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ hexadecimal\ number\n
comment17.params=
comment17.target=int\ getTotalPriceOfReservedBeanBags()
comment17.text=\n\ Method\ to\ return\ the\ total\ price\ of\ reserved\ bean\ bags\ in\ this\ BeanBagStore\n\ (i.e.\ income\ that\ will\ be\ generated\ if\ all\ the\ reserved\ stock\ is\ sold\ \n\ to\ those\ holding\ the\ reservations).\n\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ total\ price\ of\ reserved\ bean\ bags\n
comment18.params=id
comment18.target=java.lang.String\ getBeanBagDetails(java.lang.String)
comment18.text=\n\ Method\ to\ return\ textual\ details\ of\ a\ bean\ bag\ in\ stock.\ If\ there\n\ are\ no\ String\ details\ for\ a\ bean\ bag,\ there\ will\ be\ an\ empty\ String\n\ instance\ returned.\n\ <p>\n\ The\ state\ of\ this\ BeanBagStore\ must\ be\ be\ unchanged\ if\ any\ exceptions\ are\n\ thrown.\n\n\ @param\ id\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ID\ of\ bean\ bag\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ any\ textual\ details\ relating\ to\ the\ bean\ bag\n\ @throws\ BeanBagIDNotRecognisedException\ \ if\ the\ ID\ does\ not\ match\ any\ bag\ in\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (or\ previously\ in)\ stock\n\ @throws\ IllegalIDException\ \ \ if\ the\ ID\ is\ not\ a\ positive\ eight\ character\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ hexadecimal\ number\n
comment19.params=
comment19.target=void\ empty()
comment19.text=\n\ Method\ empties\ this\ BeanBagStore\ of\ its\ contents\ and\ resets\n\ all\ internal\ counters.\n
comment2.params=id\ priceInPence
comment2.target=void\ setBeanBagPrice(java.lang.String,\ int)
comment2.text=\n\ Method\ to\ set\ the\ price\ of\ bean\ bags\ with\ matching\ ID\ in\ stock.\n\ <p>\n\ The\ state\ of\ this\ BeanBagStore\ must\ be\ be\ unchanged\ if\ any\ exceptions\ are\n\ thrown.\n\n\ @param\ id\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ID\ of\ bean\ bags\n\ @param\ priceInPence\ \ \ \ \ \ bean\ bag\ price\ in\ pence\n\ @throws\ InvalidPriceException\ if\ the\ priceInPence\ <\ 1\n\ @throws\ BeanBagIDNotRecognisedException\ \ if\ the\ ID\ does\ not\ match\ any\ bag\ in\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (or\ previously\ in)\ stock\n\ @throws\ IllegalIDException\ if\ the\ ID\ is\ not\ a\ positive\ eight\ character\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ hexadecimal\ number\n
comment20.params=
comment20.target=void\ resetSaleAndCostTracking()
comment20.text=\n\ Method\ resets\ the\ tracking\ of\ number\ and\ costs\ of\ all\ bean\ bags\ sold.\n\ The\ stock\ levels\ of\ this\ BeanBagStore\ and\ reservations\ should\n\ be\ unaffected.\n
comment21.params=oldId\ replacementId
comment21.target=void\ replace(java.lang.String,\ java.lang.String)
comment21.text=\n\ Method\ replaces\ the\ ID\ of\ current\ stock\ matching\ the\ first\ argument\ with\ the\ \n\ ID\ held\ in\ the\ second\ argument.\ To\ be\ used\ if\ there\ was\ e.g.\ a\ data\ entry\ \n\ error\ on\ the\ ID\ initially\ entered.\ After\ the\ method\ has\ completed\ all\ stock\n\ which\ had\ the\ old\ ID\ should\ now\ have\ the\ replacement\ ID\ (including\ \n\ reservation),\ and\ all\ trace\ of\ the\ old\ ID\ should\ be\ purged\ from\ the\ system\ \n\ (e.g.\ tracking\ of\ previous\ sales\ that\ had\ the\ old\ ID\ should\ reflect\ the\ \n\ replacement\ ID).\n\ \n\ @param\ oldId\ \ \ \ \ \ \ \ \ \ \ \ replacement\ ID\ of\ bean\ bags\n\ @param\ replacementId\ \ \ \ \ \ \ \ \ \ \ \ old\ ID\ of\ bean\ bags\n\ @throws\ BeanBagIDNotRecognisedException\ \ if\ the\ oldId\ does\ not\ match\ any\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ bag\ in\ (or\ previously\ in)\ stock\n\ @throws\ IllegalIDException\ \ \ if\ either\ argument\ is\ not\ a\ positive\ eight\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ character\ hexadecimal\ number\n
comment3.params=num\ id
comment3.target=void\ sellBeanBags(int,\ java.lang.String)
comment3.text=\n\ Method\ sells\ bean\ bags\ with\ the\ corresponding\ ID\ from\ the\ store\ and\ removes\n\ the\ sold\ bean\ bags\ from\ the\ stock.\n\ <p>\n\ The\ state\ of\ this\ BeanBagStore\ must\ be\ be\ unchanged\ if\ any\ exceptions\ are\n\ thrown.\n\n\ @param\ num\ \ \ \ \ \ \ \ \ \ \ number\ of\ bean\ bags\ to\ be\ sold\n\ @param\ id\ \ \ \ \ \ \ \ \ \ \ \ ID\ of\ bean\ bags\ to\ be\ sold\n\ @throws\ BeanBagNotInStockException\ \ \ if\ the\ bean\ bag\ has\ previously\ been\ in\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ stock,\ but\ is\ now\ out\ of\ stock\n\ @throws\ InsufficientStockException\ \ \ if\ the\ bean\ bag\ is\ in\ stock,\ but\ not\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ enough\ are\ available\ to\ meet\ sale\ demand\n\ @throws\ IllegalNumberOfBeanBagsSoldException\ if\ an\ attempt\ is\ being\ made\ to\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ sell\ fewer\ than\ 1\ bean\ bag\n\ @throws\ PriceNotSetException\ if\ the\ bag\ is\ in\ stock,\ and\ there\ is\ sufficient\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ stock\ to\ meet\ demand,\ but\ the\ price\ has\ yet\ to\ be\ set\n\ @throws\ BeanBagIDNotRecognisedException\ \ if\ the\ ID\ does\ not\ match\ any\ bag\ in\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (or\ previously\ in)\ stock\n\ @throws\ IllegalIDException\ \ \ if\ the\ ID\ is\ not\ a\ positive\ eight\ character\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ hexadecimal\ number\n
comment4.params=num\ id
comment4.target=int\ reserveBeanBags(int,\ java.lang.String)
comment4.text=\n\ Method\ reserves\ bean\ bags\ with\ the\ corresponding\ ID\ in\ the\ store\n\ <p>\n\ The\ state\ of\ this\ BeanBagStore\ must\ be\ be\ unchanged\ if\ any\ exceptions\ are\n\ thrown.\n\n\ @param\ num\ \ \ \ \ \ \ \ \ \ \ number\ of\ bean\ bags\ to\ be\ reserved\n\ @param\ id\ \ \ \ \ \ \ \ \ \ \ \ ID\ of\ bean\ bags\ to\ be\ reserved\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ unique\ reservation\ number\n\ @throws\ BeanBagNotInStockException\ \ \ if\ the\ bean\ bag\ has\ previously\ been\ in\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ stock,\ but\ is\ now\ out\ of\ stock\n\ @throws\ InsufficientStockException\ \ \ if\ the\ bean\ bag\ is\ in\ stock,\ but\ not\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ enough\ are\ available\ to\ meet\ the\ reservation\ demand\n\ @throws\ IllegalNumberOfBeanBagsReservedException\ if\ the\ number\ of\ bean\ bags\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ requested\ to\ reserve\ is\ fewer\ than\ 1\n\ @throws\ PriceNotSetException\ if\ the\ bag\ is\ in\ stock,\ and\ there\ is\ sufficient\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ stock\ to\ meet\ demand,\ but\ the\ price\ has\ yet\ to\ be\ set\n\ @throws\ BeanBagIDNotRecognisedException\ \ if\ the\ ID\ does\ not\ match\ any\ bag\ in\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (or\ previously\ in)\ stock\n\ @throws\ IllegalIDException\ \ \ if\ the\ ID\ is\ not\ a\ positive\ eight\ character\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ hexadecimal\ number\n
comment5.params=reservationNumber
comment5.target=void\ unreserveBeanBags(int)
comment5.text=\n\ Method\ removes\ an\ existing\ reservation\ from\ the\ system\ due\ to\ a\ reservation\ \n\ cancellation\ (rather\ than\ sale).\ The\ stock\ should\ therefore\ remain\ unchanged.\n\ <p>\n\ The\ state\ of\ this\ BeanBagStore\ must\ be\ be\ unchanged\ if\ any\ exceptions\ are\n\ thrown.\n\n\ @param\ reservationNumber\ \ \ \ \ \ \ \ \ \ \ reservation\ number\n\ @throws\ ReservationNumberNotRecognisedException\ \ if\ the\ reservation\ number\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ does\ not\ match\ a\ current\ reservation\ in\ the\ system\n
comment6.params=reservationNumber
comment6.target=void\ sellBeanBags(int)
comment6.text=\n\ Method\ sells\ beanbags\ with\ the\ corresponding\ reservation\ number\ from\n\ the\ store\ and\ removes\ these\ sold\ beanbags\ from\ the\ stock.\n\ <p>\n\ The\ state\ of\ this\ BeanBagStore\ must\ be\ be\ unchanged\ if\ any\ exceptions\ are\n\ thrown.\n\n\ @param\ reservationNumber\ \ \ \ \ \ \ \ \ \ \ unique\ reservation\ number\ used\ to\ find\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ beanbag(s)\ to\ be\ sold\n\ @throws\ ReservationNumberNotRecognisedException\ \ if\ the\ reservation\ number\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ does\ not\ match\ a\ current\ reservation\ in\ the\ system\n
comment7.params=
comment7.target=int\ beanBagsInStock()
comment7.text=\n\ Access\ method\ for\ the\ number\ of\ BeanBags\ stocked\ by\ this\ BeanBagStore\n\ (total\ of\ reserved\ and\ unreserved\ stock).\n\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ number\ of\ bean\ bags\ in\ this\ store\n
comment8.params=
comment8.target=int\ reservedBeanBagsInStock()
comment8.text=\n\ Access\ method\ for\ the\ number\ of\ reserved\ bean\ bags\ stocked\ by\ this\n\ BeanBagStore.\n\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ number\ of\ reserved\ bean\ bags\ in\ this\ store\n
comment9.params=id
comment9.target=int\ beanBagsInStock(java.lang.String)
comment9.text=\n\ Method\ returns\ number\ of\ bean\ bags\ with\ matching\ ID\ in\ stock\ (total\n\ reserved\ and\ unreserved).\n\ <p>\n\ The\ state\ of\ this\ BeanBagStore\ must\ be\ be\ unchanged\ if\ any\ exceptions\ are\n\ thrown.\n\n\ @param\ id\ \ \ \ \ \ \ \ \ \ \ \ ID\ of\ bean\ bags\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ number\ of\ bean\ bags\ matching\ ID\ in\ stock\n\ @throws\ BeanBagIDNotRecognisedException\ \ if\ the\ ID\ does\ not\ match\ any\ bag\ in\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (or\ previously\ in)\ stock\n\ @throws\ IllegalIDException\ \ \ if\ the\ ID\ is\ not\ a\ positive\ eight\ character\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ hexadecimal\ number\n
numComments=22
