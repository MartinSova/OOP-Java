#BlueJ class context
comment0.params=
comment0.target=ObjectArrayList()
comment0.text=\n\ Creates\ initial\ instance\ of\ an\ ObjectArrayList\ with\ no\ contents\n
comment1.params=o
comment1.target=void\ add(java.lang.Object)
comment1.text=\n\ Method\ adds\ the\ argument\ to\ the\ end\ of\ the\ list.\ <code>null</code>\ reference\ \n\ elements\ are\ not\ supported,\ so\ ensure\ that\ you\ do\ not\ add\ them.\n\ \n\ @param\ o\ Object\ instance\ to\ be\ added\n
comment2.params=
comment2.target=void\ resizeArray()
comment2.text=\n\ Method\ doubles\ the\ capacity\ of\ the\ array\n
comment3.params=index
comment3.target=java.lang.Object\ get(int)
comment3.text=\n\ Method\ returns\ the\ element\ of\ the\ list\ at\ the\ index\ provided,\ will\n\ return\ <code>null</code>\ if\ the\ index\ is\ invalid\n\ \n\ @param\ index\ index\ of\ element\ in\ list\ to\ be\ returned\n\ @return\ Object\ at\ corresponding\ index\n
comment4.params=index
comment4.target=boolean\ isInvalid(int)
comment4.text=\n\ Checks\ validity\ of\ index\ given\ current\ range,\ returns\ true\ if\ not\ valid\n
comment5.params=o
comment5.target=boolean\ remove(java.lang.Object)
comment5.text=\n\ Method\ removes\ the\ argument\ if\ it\ is\ contained\ in\ the\ list\ and\ returns\ <code>true</true>\n\ if\ it\ is\ successful.\ It\ will\ return\ <code>false</code>\ if\ <code>o</code>\ is\ not\ contained\ \n\ in\ the\ list\ and\ therefore\ not\ removed\n\ \n\ @param\ index\ index\ of\ element\ in\ list\ to\ be\ returned\n\ @return\ Object\ at\ corresponding\ index\ \n\ \n
comment6.params=index
comment6.target=void\ contract(int)
comment6.text=\n\ Method\ contracts\ effectively\ removing\ the\ index\ item.\ If\ item\ beyond\ range\ of\ \n\ array,\ returns\ false,\ otherwise\ returns\ true\ on\ successful\ removal\n
comment7.params=index
comment7.target=java.lang.Object\ remove(int)
comment7.text=\n\ Method\ removes\ the\ element\ of\ the\ list\ at\ the\ index\ provided,\ will\n\ return\ <code>null</code>\ if\ the\ index\ is\ invalid.\ Otherwise\ will\ \n\ return\ the\ instance\ removed\n\ \n\ @param\ index\ index\ of\ element\ in\ list\ to\ be\ returned\n\ @return\ Object\ at\ corresponding\ index\ \n\ \n
comment8.params=o\ index
comment8.target=boolean\ replace(java.lang.Object,\ int)
comment8.text=\n\ Method\ replaces\ the\ element\ of\ the\ list\ at\ the\ index\ provided,\ will\n\ return\ <code>false</code>\ if\ the\ index\ is\ invalid,\ otherwise\ will\ return\ true.\n\ \n\ @param\ o\ object\ to\ be\ placed\ in\ the\ list\n\ @param\ index\ index\ of\ element\ in\ list\ to\ be\ replaced\n\ @return\ true\ if\ sucessfully\ replaced,\ otherwise\ false\ if\ index\ is\n\ \ \ \ \ \ \ \ \ out\ of\ the\ range\ of\ stored\ data\n
comment9.params=
comment9.target=int\ size()
comment9.text=\n\ Method\ returns\ the\ total\ number\ of\ elements\ in\ the\ list\n\ \n\ @return\ number\ of\ elements\ in\ the\ list\ \n
numComments=10
